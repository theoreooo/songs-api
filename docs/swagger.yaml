definitions:
  models.Artist:
    properties:
      createdAt:
        type: string
      group:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.MessageResponse:
    properties:
      message:
        type: string
    type: object
  models.Song:
    properties:
      artist:
        $ref: '#/definitions/models.Artist'
      artistId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        example: "2025-01-16"
        type: string
      song:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
  models.SongUpdate:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        example: "2025-01-16"
        type: string
      song:
        type: string
      text:
        type: string
    type: object
info:
  contact: {}
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен. Можно фильтровать по названию песни, группе,
        дате релиза и другим полям.
      parameters:
      - description: Название группы для фильтрации (регистр не важен)
        in: query
        name: group
        type: string
      - description: Название песни для фильтрации (регистр не важен)
        in: query
        name: song
        type: string
      - description: Дата релиза для фильтрации(в формате YYYY-MM-DD)
        in: query
        name: releaseDate
        type: string
      - description: Фрагмент текста песни для поиска
        in: query
        name: text
        type: string
      - description: Полная URL ссылка для поиска
        in: query
        name: link
        type: string
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Размер страницы (по умолчанию 10)
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение списка песен с фильтрацией
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавляет новую песню, обогащая данные через внешний API. Если
        артист с указанным именем не существует, он создается.
      parameters:
      - description: 'Данные песни (обязательные поля: group и song. Чувствителен
          к регистру.)'
        in: body
        name: song
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Созданная песня с данными из внешнего API
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Ошибка валидации входных данных
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка при получении данных с внешнего API или сохранении в
            БД
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Добавление новой песни
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет песню по указанному ID.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Удаление песни
      tags:
      - songs
    get:
      consumes:
      - application/json
      description: Возвращает информацию о песне по указанному ID, включая данные
        артиста.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные песни, включая артиста
          schema:
            $ref: '#/definitions/models.Song'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение детальной информации о песне
      tags:
      - songs
    patch:
      consumes:
      - application/json
      description: Обновляет указанные поля песни по ID. Если поле не передано, оно
        не изменяется.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления песни (releaseDate в формате YYYY-MM-DD)
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённые данные песни
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Ошибка в запросе или данные невалидны
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Частичное обновление данных песни
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Разбивает текст песни на куплеты и возвращает запрошенную страницу.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Размер страницы (по умолчанию 5)
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ответ содержит массив строк куплетов
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение текста песни с пагинацией по куплетам
      tags:
      - songs
swagger: "2.0"
